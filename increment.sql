-- 1. Очистка данных из STG и DWH FACT

DELETE FROM ITDE1.RUBA_STG_ACCOUNTS
DELETE FROM ITDE1.RUBA_STG_CARDS
DELETE FROM ITDE1.RUBA_STG_CLIENTS
DELETE FROM ITDE1.RUBA_STG_BLACKLIST
DELETE FROM ITDE1.RUBA_STG_TERMINALS
DELETE FROM ITDE1.RUBA_STG_TRANSACTIONS
DELETE FROM ITDE1.RUBA_DWH_FACT_TRANSACTIONS
DELETE FROM ITDE1.RUBA_DWH_FACT_BLACKLIST

-- 2. Захват данных из источника в STG

-- Удаление дубликатов из STG терманалов
DELETE FROM ITDE1.RUBA_STG_TERMINALS
WHERE EXISTS
    ( 
    SELECT *
    FROM ITDE1.RUBA_DWH_DIM_TERMINALS_HIST
    WHERE ITDE1.RUBA_DWH_DIM_TERMINALS_HIST.TERMINAL_ID = ITDE1.RUBA_STG_TERMINALS.TERMINAL_ID
    AND ITDE1.RUBA_DWH_DIM_TERMINALS_HIST.TERMINAL_TYPE = ITDE1.RUBA_STG_TERMINALS.TERMINAL_TYPE
    AND ITDE1.RUBA_DWH_DIM_TERMINALS_HIST.TERMINAL_CITY = ITDE1.RUBA_STG_TERMINALS.TERMINAL_CITY
    AND ITDE1.RUBA_DWH_DIM_TERMINALS_HIST.TERMINAL_ADDRESS = ITDE1.RUBA_STG_TERMINALS.TERMINAL_ADDRESS
    )
/*
UPDATE ITDE1.RUBA_META_LOADING
SET last_update = ( date )
WHERE 1=1
	AND dbname = 'ITDE1' 
	AND tablename = 'RUBA_DWH_DIM_TERMINALS_HIST' */

INSERT INTO ITDE1.RUBA_STG_ACCOUNTS( ACCOUNT_NUM, VALID_TO, CLIENT, CREATE_DT, UPDATE_DT )
SELECT 
	ACCOUNT, 
	VALID_TO, 
	CLIENT, 
	CREATE_DT, 
	UPDATE_DT
FROM BANK.ACCOUNTS
WHERE COALESCE( UPDATE_DT, CREATE_DT ) > (
	SELECT LAST_UPDATE FROM ITDE1.RUBA_META_LOADING WHERE DBNAME = 'ITDE1' AND TABLENAME = 'RUBA_DWH_DIM_ACCOUNTS_HIST'
);

INSERT INTO ITDE1.RUBA_STG_CARDS( CARD_NUM, ACCOUNT, CREATE_DT, UPDATE_DT )
SELECT 
	TRIM(TRAILING ' ' FROM CARD_NUM), 
	ACCOUNT, 
	CREATE_DT, 
	UPDATE_DT
FROM BANK.CARDS
WHERE COALESCE( UPDATE_DT, CREATE_DT ) > (
	SELECT LAST_UPDATE FROM ITDE1.RUBA_META_LOADING WHERE DBNAME = 'ITDE1' AND TABLENAME = 'RUBA_DWH_DIM_CARDS_HIST'
);

INSERT INTO ITDE1.RUBA_STG_CLIENTS( CLIENT_ID, LAST_NAME, FIRST_NAME, PATRONYMIC, DATE_OF_BIRTH,
 PASSPORT_NUM, PASSPORT_VALID_TO, PHONE, CREATE_DT, UPDATE_DT )
SELECT 
	CLIENT_ID, 
	LAST_NAME, 
	FIRST_NAME, 
	PATRONYMIC, 
	DATE_OF_BIRTH, 
	PASSPORT_NUM, 
	PASSPORT_VALID_TO, 
	PHONE, 
	CREATE_DT, 
	UPDATE_DT
FROM BANK.CLIENTS
WHERE COALESCE( UPDATE_DT, CREATE_DT ) > (
	SELECT LAST_UPDATE FROM ITDE1.RUBA_META_LOADING WHERE DBNAME = 'ITDE1' AND TABLENAME = 'RUBA_DWH_DIM_CLIENTS_HIST'
);

-- 3. Обновляем обновленные строки в хранилище

-- Вставка фактов
INSERT INTO ITDE1.RUBA_DWH_FACT_TRANSACTIONS( TRANS_ID, TRANS_DATE, CARD_NUM, OPER_TYPE, AMT, OPER_RESULT, TERMINAL )
SELECT
	TRANS_ID,
	TO_DATE ( TRANS_DATE,'YYYY-MM-DD HH24:MI:SS' ),
	TO_NUMBER (TRIM(REPLACE(AMT, ',', '.'))),
	TRIM(TRAILING ' ' FROM CARD_NUM),
	OPER_TYPE,
	OPER_RESULT, 
	TERMINAL
FROM ITDE1.RUBA_STG_TRANSACTIONS;

INSERT INTO ITDE1.RUBA_DWH_FACT_BLACKLIST( PASSPORT_NUM, ENTRY_DT )
SELECT
	PASSPORT_NUM,
	TO_DATE ( REPORT_DT,'YYYY-MM-DD HH24:MI:SS' )
FROM ITDE1.RUBA_STG_blacklist;

-- Загрузка измерений
--------------------------------------------------------
--  INCREMENT for Table TERMINALS
--------------------------------------------------------
INSERT INTO ITDE1.RUBA_DWH_DIM_TERMINALS_HIST ( TERMINAL_ID, TERMINAL_TYPE, TERMINAL_CITY, TERMINAL_ADDRESS, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT
	TERMINAL_ID, 
	TERMINAL_TYPE, 
	TERMINAL_CITY, 
	TERMINAL_ADDRESS,
	(
		SELECT last_update 
    	FROM ITDE1.RUBA_META_LOADING
		WHERE dbname = 'ITDE1' 
		AND tablename = 'RUBA_DWH_DIM_TERMINALS_HIST' 
	),
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'N'
FROM ITDE1.RUBA_STG_TERMINALS


MERGE INTO ITDE1.RUBA_DWH_DIM_TERMINALS_HIST tgt
USING ITDE1.RUBA_STG_TERMINALS stg
ON ( tgt.TERMINAL_ID = stg.TERMINAL_ID AND tgt.EFFECTIVE_FROM < (
		SELECT last_update 
    	FROM ITDE1.RUBA_META_LOADING
		WHERE dbname = 'ITDE1' 
		AND tablename = 'RUBA_DWH_DIM_TERMINALS_HIST' 
	))
WHEN MATCHED THEN UPDATE SET
	tgt.EFFECTIVE_TO = (
		SELECT last_update 
    	FROM ITDE1.RUBA_META_LOADING
		WHERE dbname = 'ITDE1' 
		AND tablename = 'RUBA_DWH_DIM_TERMINALS_HIST' 
	) - INTERVAL '1' second
	WHERE tgt.EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')

--------------------------------------------------------
--  INCREMENT for Table ACCOUNTS
--------------------------------------------------------
INSERT INTO ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST( ACCOUNT_NUM, VALID_TO, CLIENT, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT 
	ACCOUNT_NUM, 
	VALID_TO, 
	CLIENT, 
	COALESCE( UPDATE_DT, CREATE_DT ), --поменять на UPDATE_DT
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'N'
FROM ITDE1.RUBA_STG_ACCOUNTS

MERGE INTO ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST tgt
USING ITDE1.RUBA_STG_ACCOUNTS stg
ON ( tgt.ACCOUNT_NUM = stg.ACCOUNT_NUM AND tgt.EFFECTIVE_FROM < COALESCE( UPDATE_DT, CREATE_DT ))
WHEN MATCHED THEN UPDATE SET
	tgt.EFFECTIVE_TO = COALESCE( stg.UPDATE_DT, stg.CREATE_DT ) - INTERVAL '1' second
	WHERE tgt.EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')

--------------------------------------------------------
--  INCREMENT for Table PAYMENT_CARDS
--------------------------------------------------------
INSERT INTO ITDE1.RUBA_DWH_DIM_CARDS_HIST ( CARD_NUM, ACCOUNT_NUM, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT 
	CARD_NUM, 
	ACCOUNT, 
	COALESCE( UPDATE_DT, CREATE_DT ), --поменять на UPDATE_DT
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'N'
FROM ITDE1.RUBA_STG_CARDS

MERGE INTO ITDE1.RUBA_DWH_DIM_CARDS_HIST tgt
USING ITDE1.RUBA_STG_CARDS stg
ON ( tgt.CARD_NUM = stg.CARD_NUM AND tgt.EFFECTIVE_FROM < COALESCE( UPDATE_DT, CREATE_DT ))
WHEN MATCHED THEN UPDATE SET
	tgt.EFFECTIVE_TO = COALESCE( stg.UPDATE_DT, stg.CREATE_DT ) - INTERVAL '1' second
	WHERE tgt.EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')

--------------------------------------------------------
--  INCREMENT for Table CLIENTS
--------------------------------------------------------
INSERT INTO ITDE1.RUBA_DWH_DIM_CLIENTS_HIST ( CLIENT_ID, LAST_NAME, FIRST_NAME, PATRONYMIC, DATE_OF_BIRTH,
 PASSPORT_NUM, PASSPORT_VALID_TO, PHONE, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT
	CLIENT_ID, 
	LAST_NAME, 
	FIRST_NAME, 
	PATRONYMIC, 
	DATE_OF_BIRTH, 
	PASSPORT_NUM, 
	PASSPORT_VALID_TO, 
	PHONE, 
	COALESCE( UPDATE_DT, CREATE_DT ), --поменять на UPDATE_DT
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'N'
FROM ITDE1.RUBA_STG_CLIENTS

MERGE INTO ITDE1.RUBA_DWH_DIM_CLIENTS_HIST tgt
USING ITDE1.RUBA_STG_CLIENTS stg
ON ( tgt.CLIENT_ID = stg.CLIENT_ID AND tgt.EFFECTIVE_FROM < COALESCE( UPDATE_DT, CREATE_DT ))
WHEN MATCHED THEN UPDATE SET
	tgt.EFFECTIVE_TO = COALESCE( stg.UPDATE_DT, stg.CREATE_DT ) - INTERVAL '1' second
	WHERE tgt.EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')

-- 4 и 5. Захватываем ключи для проверки удалений и Удаляем удаленные записи в целевой таблице

--------------------------------------------------------
--   TERMINALS
--------------------------------------------------------
TRUNCATE TABLE ITDE1.RUBA_STG_DEL

INSERT INTO ITDE1.RUBA_STG_DEL ( ID )
SELECT TERMINAL_ID FROM ITDE1.RUBA_STG_TERMINALS

INSERT INTO ITDE1.RUBA_DWH_DIM_TERMINALS_HIST ( TERMINAL_ID, TERMINAL_TYPE, TERMINAL_CITY, TERMINAL_ADDRESS, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT
	t.TERMINAL_ID, 
	t.TERMINAL_TYPE, 
	t.TERMINAL_CITY, 
	t.TERMINAL_ADDRESS,
	SYSDATE,
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'Y'
FROM ITDE1.RUBA_DWH_DIM_TERMINALS_HIST t
LEFT JOIN ITDE1.RUBA_STG_DEL s
ON t.TERMINAL_ID = s.ID
	AND EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')
	AND DELETED_FLG = 'N'
WHERE s.ID IS NULL

UPDATE ITDE1.RUBA_DWH_DIM_TERMINALS_HIST 
SET EFFECTIVE_TO = SYSDATE - INTERVAL '1' second
WHERE TERMINAL_ID IN (
	SELECT t.TERMINAL_ID
	FROM ITDE1.RUBA_DWH_DIM_TERMINALS_HIST t
	LEFT JOIN ITDE1.RUBA_STG_DEL s
	ON t.TERMINAL_ID = s.ID
		AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
		AND  deleted_flg = 'N'
	WHERE s.id IS NULL )
AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
AND  effective_from < SYSDATE;

--------------------------------------------------------
--   ACCOUNTS
--------------------------------------------------------
TRUNCATE TABLE ITDE1.RUBA_STG_DEL

INSERT INTO ITDE1.RUBA_STG_DEL ( ID )
SELECT ACCOUNT FROM BANK.ACCOUNTS

INSERT INTO ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST( ACCOUNT_NUM, VALID_TO, CLIENT, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT 
	t.ACCOUNT_NUM, 
	t.VALID_TO, 
	t.CLIENT, 
	SYSDATE,
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'Y'
FROM ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST t
LEFT JOIN ITDE1.RUBA_STG_DEL s
ON t.ACCOUNT_NUM = s.ID
	AND EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')
	AND DELETED_FLG = 'N'
WHERE s.ID IS NULL

UPDATE ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST 
SET EFFECTIVE_TO = SYSDATE - INTERVAL '1' second
WHERE ACCOUNT_NUM IN (
	SELECT t.ACCOUNT_NUM
	FROM ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST  t
	LEFT JOIN ITDE1.RUBA_STG_DEL s
	ON t.ACCOUNT_NUM = s.ID
		AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
		AND  deleted_flg = 'N'
	WHERE s.id IS NULL )
AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
AND  effective_from < SYSDATE;

--------------------------------------------------------
--   CARDS
--------------------------------------------------------
TRUNCATE TABLE ITDE1.RUBA_STG_DEL

INSERT INTO ITDE1.RUBA_STG_DEL ( ID )
SELECT CARD_NUM FROM BANK.CARDS

INSERT INTO ITDE1.RUBA_DWH_DIM_CARDS_HIST ( CARD_NUM, ACCOUNT_NUM, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT 
	t.CARD_NUM, 
	t.ACCOUNT_NUM,  
	SYSDATE,
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'Y'
FROM ITDE1.RUBA_DWH_DIM_CARDS_HIST t
LEFT JOIN ITDE1.RUBA_STG_DEL s
ON t.CARD_NUM = s.ID
	AND EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')
	AND DELETED_FLG = 'N'
WHERE s.ID IS NULL

UPDATE ITDE1.RUBA_DWH_DIM_CARDS_HIST
SET EFFECTIVE_TO = SYSDATE - INTERVAL '1' second
WHERE CARD_NUM IN (
	SELECT t.CARD_NUM
	FROM ITDE1.RUBA_DWH_DIM_CARDS_HIST t
	LEFT JOIN ITDE1.RUBA_STG_DEL s
	ON t.CARD_NUM = s.ID
		AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
		AND  deleted_flg = 'N'
	WHERE s.id IS NULL )
AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
AND  effective_from < SYSDATE;

--------------------------------------------------------
--   CLIENTS
--------------------------------------------------------
TRUNCATE TABLE ITDE1.RUBA_STG_DEL

INSERT INTO ITDE1.RUBA_STG_DEL ( ID )
SELECT CLIENT_ID FROM BANK.CLIENTS

INSERT INTO ITDE1.RUBA_DWH_DIM_CLIENTS_HIST ( CLIENT_ID, LAST_NAME, FIRST_NAME, PATRONYMIC, DATE_OF_BIRTH,
 PASSPORT_NUM, PASSPORT_VALID_TO, PHONE, EFFECTIVE_FROM, EFFECTIVE_TO, DELETED_FLG )
SELECT
	t.CLIENT_ID, 
	t.LAST_NAME, 
	t.FIRST_NAME, 
	t.PATRONYMIC, 
	t.DATE_OF_BIRTH, 
	t.PASSPORT_NUM, 
	t.PASSPORT_VALID_TO, 
	t.PHONE,   
	SYSDATE,
	TO_DATE('2999.12.31', 'YYYY.MM.DD'),
	'Y'
FROM ITDE1.RUBA_DWH_DIM_CLIENTS_HIST t
LEFT JOIN ITDE1.RUBA_STG_DEL s
ON t.CLIENT_ID = s.ID
	AND EFFECTIVE_TO = TO_DATE('2999.12.31', 'YYYY.MM.DD')
	AND DELETED_FLG = 'N'
WHERE s.ID IS NULL

UPDATE ITDE1.RUBA_DWH_DIM_CLIENTS_HIST
SET EFFECTIVE_TO = SYSDATE - INTERVAL '1' second
WHERE CLIENT_ID IN (
	SELECT t.CLIENT_ID
	FROM ITDE1.RUBA_DWH_DIM_CLIENTS_HIST t
	LEFT JOIN ITDE1.RUBA_STG_DEL s
	ON t.CLIENT_ID = s.ID
		AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
		AND  deleted_flg = 'N'
	WHERE s.id IS NULL )
AND  effective_to = to_date( '2999-12-31', 'YYYY-MM-DD' )
AND  effective_from < SYSDATE;

-- 6. Обновляем метаданные - дату максимальной загрузуки

UPDATE ITDE1.RUBA_META_LOADING
SET last_update = ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_ACCOUNTS )
WHERE 1=1
	AND dbname = 'ITDE1' 
	AND tablename = 'ITDE1.RUBA_DWH_DIM_ACCOUNTS_HIST' 
	AND ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_ACCOUNTS ) IS NOT NULL;

UPDATE ITDE1.RUBA_META_LOADING
SET last_update = ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_CARDS )
WHERE 1=1
	AND dbname = 'ITDE1' 
	AND tablename = 'RUBA_DWH_DIM_CARDS_HIST' 
	AND ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_CARDS ) IS NOT NULL;

UPDATE ITDE1.RUBA_META_LOADING
SET last_update = ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_CLIENTS )
WHERE 1=1
	AND dbname = 'ITDE1' 
	AND tablename = 'ITDE1.RUBA_DWH_DIM_CLIENTS_HIST' 
	AND ( SELECT MAX( COALESCE (update_dt, create_dt) ) FROM ITDE1.RUBA_STG_CLIENTS ) IS NOT NULL;

-- 7. Фиксируется транзакция
COMMIT;
